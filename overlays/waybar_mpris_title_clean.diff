diff --git a/include/modules/mpris/mpris.hpp b/include/modules/mpris/mpris.hpp
index ad4dac1e..b4a446ad 100644
--- a/include/modules/mpris/mpris.hpp
+++ b/include/modules/mpris/mpris.hpp
@@ -2,6 +2,7 @@

 #include <iostream>
 #include <optional>
+#include <regex>
 #include <string>

 #include "gtkmm/box.h"
@@ -72,6 +73,7 @@ class Mpris : public ALabel {
   bool truncate_hours_;
   bool tooltip_len_limits_;
   std::string ellipsis_;
+  std::regex title_regex_;

   std::string player_;
   std::vector<std::string> ignored_players_;
diff --git a/src/modules/mpris/mpris.cpp b/src/modules/mpris/mpris.cpp
index ed383b0c..309b07a4 100644
--- a/src/modules/mpris/mpris.cpp
+++ b/src/modules/mpris/mpris.cpp
@@ -3,6 +3,7 @@
 #include <fmt/core.h>

 #include <optional>
+#include <regex>
 #include <sstream>
 #include <string>

@@ -33,6 +34,8 @@ Mpris::Mpris(const std::string& id, const Json::Value& config)
       tooltip_len_limits_(false),
       // this character is used in Gnome so it's fine to use it here
       ellipsis_("\u2026"),
+      // used to remove useless crap from song titles
+      title_regex_(R"regex(\s(?:[\[(])(?=[^\])\)]*(?:feat|edit|remaster|version))[^)\]]+[\])]| - .*?(?:feat|edit|remaster|version))regex", std::regex_constants::icase),
       player_("playerctld"),
       manager(),
       player(),
@@ -256,6 +259,7 @@ auto Mpris::getAlbumStr(const PlayerInfo& info, bool truncated) -> std::string {

 auto Mpris::getTitleStr(const PlayerInfo& info, bool truncated) -> std::string {
   auto title = info.title.value_or(std::string());
+  title = std::regex_replace(title, title_regex_, "");
   if (truncated && title_len_ >= 0) truncate(title, ellipsis_, title_len_);
   return title;
 }
